---
- ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for install in {{ kots_install_dir }}...
  become: true
  ansible.builtin.stat:
    path: '{{ kots_install_dir }}'
  changed_when: false
  register: kots_binary
- when: not kots_binary.stat.exists
  block:
    - name: Downloading {{ kots_url }}...
      become: true
      become_user: root
      get_url:
        url: '{{ kots_url }}'
        dest: '{{ kots_tmp_archive }}'
        checksum: '{{ kots_checksum }}'
        mode: '644'
    - name: Mkdir {{ kots_install_dir }}...
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ kots_install_dir }}'
        state: directory
        mode: '755'
    - name: Unarchive {{ kots_tmp_archive }} to {{ kots_install_dir }}...
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ kots_tmp_archive }}'
        dest: '{{ kots_install_dir }}'
        creates: '{{ kots_install_dir }}/kots'
  always:
    - name: Rm {{ kots_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ kots_tmp_archive }}'
        state: absent
- name: Link executables in {{ kots_install_dir }} from {{ kots_parent_install_dir }}/bin...
  become: true
  become_user: root
  with_items:
    - kots
  ansible.builtin.file:
    src: '{{ kots_install_dir }}/{{ item }}'
    dest: '{{ kots_parent_install_dir }}/bin/{{ item }}'
    state: link
